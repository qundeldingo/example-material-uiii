query orders($distinct_on: [orders_select_column!], $limit: Int, $offset: Int, $order_by: [orders_order_by!] = { updated_at: desc }, $where: orders_bool_exp) {
  orders(distinct_on: $distinct_on, limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
    ...orders_orders
  }
}

query orders_by_pk($id: Int!) {
  orders_by_pk(id: $id) {
    ...orders_by_pk_orders
  }
}

mutation insert_orders($orders: [orders_insert_input!]!, $on_conflict: orders_on_conflict) {
  insert_orders(objects: $orders, on_conflict: $on_conflict) {
    ...insert_orders_orders_mutation_response
  }
}

mutation insert_orders_one($orders: orders_insert_input!, $on_conflict: orders_on_conflict) {
  insert_orders_one(object: $orders, on_conflict: $on_conflict) {
    ...insert_orders_one_orders
  }
}

mutation update_orders($_inc: orders_inc_input, $orders: orders_set_input, $where: orders_bool_exp!) {
  update_orders(_inc: $_inc, _set: $orders, where: $where) {
    ...update_orders_orders_mutation_response
  }
}

mutation update_orders_by_pk($_inc: orders_inc_input, $orders: orders_set_input, $pk_columns: orders_pk_columns_input!) {
  update_orders_by_pk(_inc: $_inc, _set: $orders, pk_columns: $pk_columns) {
    ...update_orders_by_pk_orders
  }
}

fragment orders_orders on orders {
  id
  note
  order_date
}

fragment orders_by_pk_orders on orders {
  id
  note
  order_date
}

fragment insert_orders_orders_mutation_response on orders_mutation_response {
  returning {
    created_at
    customer_id
    id
    is_valid
    note
    order_date
    updated_at
  }
}

fragment insert_orders_one_orders on orders {
  id
  note
  order_date
}

fragment update_orders_orders_mutation_response on orders_mutation_response {
  returning {
    created_at
    customer_id
    id
    is_valid
    note
    order_date
    updated_at
  }
}

fragment update_orders_by_pk_orders on orders {
  id
  note
  order_date
}